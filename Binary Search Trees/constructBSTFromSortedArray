public class Solution {

/*	Binary Tree Node class 
 * 
 * 	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;
		
		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/

	public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr){
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
		*/
		return helper(arr,0,arr.length);
    }
    public static BinaryTreeNode<Integer> helper(int arr[], int s,int e){
        if(s >= e){
            return null;
        }
        
        int mid=0;
        if ((s + e) % 2 == 0) {
            mid = ((s + e) / 2) - 1;
        } else {
            mid = (s + e) / 2;
        }
        BinaryTreeNode<Integer> root=new BinaryTreeNode<Integer>(arr[mid]);
        root.left = helper(arr,s,mid);
        root.right = helper(arr,mid+1,e);
        return root;
    }
}	
