/*************** 
 * Following is the Node class already written 
class LinkedListNode<T> {
	T data;
	LinkedListNode<T> next;

	public Node(T data) {
		this.data = data;
	}
}
 ***************/

public class Solution {

	public static LinkedListNode<Integer> mergeTwoList(LinkedListNode<Integer> head1, LinkedListNode<Integer> head2) {
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
		*/
		LinkedListNode<Integer> t1=head1;
        LinkedListNode<Integer> t2=head2;
        LinkedListNode<Integer> head3,tail3;
        head3=null;tail3=null;
        
        if(head1 == null)
        {
            return head2;
        }
        
        if(head2 == null)
        {
            return head1;
        }
        
        if(head1.next == null && head2.next == null)
        {
        	if(head1.data < head2.data)
            {
                head3=head1;
                head3.next=head2;
                return head3;
            }
            else
            {
                head3=head2;
                head3.next=head1;
                return head3;
            }
        }
        
        while(t1 != null && t2 != null)
        {
            if(head3 == null)
            {
                if(t1.data < t2.data)
                {
                    head3=t1;
                    tail3=t1;
                    t1=t1.next;
                }
                else
                {
                    head3=t2;
                    tail3=t2;
                    t2=t2.next;
                }
            }
            
            if(t1.data < t2.data)
            {
                tail3.next=t1;
                tail3=tail3.next;
                t1=t1.next;
            }
            else
            {
                tail3.next=t2;
                tail3=tail3.next;
                t2=t2.next;
            }
        }
        if(t1 == null)
        {
            tail3.next=t2;
        }
        else if(t2 == null)
        {
            tail3.next=t1;
        }
        
        return head3;
	}

}
