/*
class LinkedListNode<T> {
	public T data;
	public LinkedListNode<T> next;

	public LinkedListNode(T data) {
		this.setData(data);
		this.next = null;
	}

	public T getData() {
		return data;
	}

	public void setData(T data) {
		this.data = data;
	}

}
* */
public class solution {
	public static LinkedListNode<Integer> skipMdeleteN(LinkedListNode<Integer> head, int M, int N) {

        if(M == 0)
        {
            LinkedListNode<Integer> t=null;
            return t;
        }
        if(N == 0)
            return head;
        
        
        int i=1;
        int j=1;
        LinkedListNode<Integer> temp1 = head;
        LinkedListNode<Integer> temp2 = null;
        
        while(temp1 != null)
        {
            i=1;
            while(i<M && temp1 != null)
            {
                temp1=temp1.next;
                i++;
            }
            
            if(temp1 == null)
            {
                break;
            }
            
            temp2 = temp1.next;
            j=1;
            while(j<N && temp2 != null)
            {
                j++;
                temp2 = temp2.next;
            }
            
            if(temp2 == null)
            {
                temp1.next = temp2;
                break;
            }
            temp1.next = temp2.next;
            temp1 = temp2.next;
            
        }       
        
        
//         while(temp1 != null)
//         {
//             i=1;
//     		if(i != M)
//             {
//                 temp1=temp1.next;
//                 i++;
//             }
//             else if(i > M)
//             {
                
//             }
//             else
//             {
//                 temp2 = temp1.next;
//                 j=1;
//                 while(temp2 != null)
//                 {
//                     if(j != N)
//                     {
//                         j++;
//                         temp2=temp2.next;
//                     }
//                     else
//                     {
//                         break;
//                     }
//                 }
//                 if(temp2 == null)
//                 {
//                     temp1.next = temp2;
//                 }
//                 else
//                 {
//                     temp2=temp2.next;
//                     temp1.next=temp2;
//                 }
//                 temp1 = temp2;
//                 i=1;
//             }
//         }
        
        return head;
	}
}
